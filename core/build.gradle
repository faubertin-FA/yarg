allprojects {
    apply(plugin: 'java')
    apply(plugin: 'idea')

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    group = 'com.haulmont.yarg'

    test {
        exclude '**/CustomTemplateTest.class'
        exclude '**/ExportImportTest.class'
        exclude '**/ReportingTest.class'
        exclude '**/SqlLoaderTest.class'
        exclude '**/XlsxUtilTest.class'
        exclude 'integration/XlsIntegrationTest.class'
        exclude 'integration/XlsxIntegrationTest.class'
        exclude 'loaders/DataExtractorTest.class'
        exclude 'sample/bookstore/BookStoreTest.class'
        exclude 'sample/bookstore2/BookStore2Test.class'
        exclude 'sample/financedetails/BreakdownTest.class'
        exclude 'sample/incomes/IncomesTest.class'
        exclude 'sample/invoice/InvoiceTest.class'
        exclude 'sample/nestedband/NestedBandTest.class'
        exclude 'sample/services/ServicesTest.class'
        exclude 'smoketest/DocSpecificTest.class'
        exclude 'smoketest/DocxSpecificTest.class'
        exclude 'smoketest/FormattersSmokeTest.class'
        exclude 'smoketest/XlsxSpecificTest.class'
    }
}

buildscript {
    repositories {
        maven { url "https://nexus.financeactive.com/repository/maven-public/" }
        mavenLocal()
    }
    dependencies {
        //Release plugin
        classpath 'net.researchgate:gradle-release:2.5.0'
    }
}

// Release
apply plugin: 'net.researchgate.release'
release {
    failOnUnversionedFiles = false
    failOnCommitNeeded = false
    failOnPublishNeeded = false
    failOnUpdateNeeded = false
    git {
        requireBranch = null
        pushToCurrentBranch = false
    }
}

def api = project(':yarg-api')
def core = project(':yarg')
def console = project(':yarg-console')
def server = project(':yarg-server')

configure([api, core, console, server]) {
    sourceSets {
        main {
            java { srcDir 'src' }
            resources { srcDir 'src' }
        }

        test {
            java { srcDir 'test' }
            resources { srcDir 'test' }
        }
    }

    // Deploy
    apply plugin: 'maven'

    configurations {
        deployerJars
    }

    dependencies {
        deployerJars(group: 'org.apache.maven.wagon', name: 'wagon-http', version: '1.0-beta-2')
    }
}

configure(api) {

}

configure(core) {

    dependencies {
        compile(api)
        compile(group: 'commons-logging', name: 'commons-logging', version: '1.2')
        compile(group: 'org.apache.commons', name: 'commons-lang3', version: '3.4')
        compile(group: 'commons-io', name: 'commons-io', version: '2.4')
        compile(group: 'dom4j', name: 'dom4j', version: '1.6.1')
        compile(group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21')
        compile(group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.12')
        compile(group: 'antlr', name: 'antlr', version: '2.7.7')
        compile(group: 'asm', name: 'asm', version: '3.3.1')
        compile(group: 'org.antlr', name: 'antlr-runtime', version: '3.2')
        compile(group: 'org.freemarker', name: 'freemarker', version: '2.3.16')
        compile(group: 'org.openoffice', name: 'juh', version: '3.0.0')
        compile(group: 'org.openoffice', name: 'ridl', version: '3.0.0')
        compile(group: 'org.openoffice', name: 'unoil', version: '3.0.0')
        compile(group: "org.apache.avalon.framework", name: "avalon-framework-api", version: '4.3.1')
        compile(group: "org.apache.avalon.framework", name: "avalon-framework-impl", version: '4.3.1')
        compile(group: "org.apache.xmlgraphics", name: "fop", version: "2.1")
        compile(group: "org.apache.xmlgraphics", name: "xmlgraphics-commons", version: "2.1")
        compile(group: "org.plutext", name: "jaxb-svg11", version: "1.0.2")
        compile(group: "org.plutext", name: "jaxb-xslfo", version: "1.0.1")
        compile(group: "org.plutext", name: "jaxb-xmldsig-core", version: "1.0.0")
        compile(group: "org.apache.xmlgraphics", name: "batik-bridge", version: "1.8")
        compile(group: "org.apache.xmlgraphics", name: "batik-svggen", version: "1.8")
        compile(group: "org.apache.xmlgraphics", name: "batik-awt-util", version: "1.8")
        compile(group: "org.apache.xmlgraphics", name: "batik-css", version: "1.8")
        compile(group: "xalan", name: "xalan", version: "2.7.1")
        compile(group: "xalan", name: "serializer", version: "2.7.1")
        compile(group: "com.lowagie", name: "itext", version: "2.1.7") {
            exclude(group: 'org.bouncycastle', module: 'bctsp-jdk14')
            exclude(group: 'org.bouncycastle', module: 'bcprov-jdk14')
            exclude(group: 'org.bouncycastle', module: 'bcmail-jdk14')
            exclude(group: 'bouncycastle', module: 'bcmail-jdk14')
            exclude(group: 'bouncycastle', module: 'bcprov-jdk14')
            exclude(group: 'bouncycastle', module: 'bctsp-jdk14')
        }
        compile(group: 'org.apache.poi', name: 'poi', version: '3.15')
        compile(group: 'org.apache.poi', name: 'poi-scratchpad', version: '3.9') {
            exclude(group: 'org.apache.poi', module: 'poi')
        }
        compile(group: 'org.xhtmlrenderer', name: 'flying-saucer-core', version: '9.1.7')
        compile(group: 'org.xhtmlrenderer', name: 'flying-saucer-pdf', version: '9.1.7') {
            exclude(group: 'org.bouncycastle', module: 'bctsp-jdk14')
            exclude(group: 'org.bouncycastle', module: 'bcprov-jdk14')
            exclude(group: 'org.bouncycastle', module: 'bcmail-jdk14')
            exclude(group: 'bouncycastle', module: 'bcmail-jdk14')
            exclude(group: 'bouncycastle', module: 'bcprov-jdk14')
            exclude(group: 'bouncycastle', module: 'bctsp-jdk14')
        }
        compile(group: "org.docx4j", name: "docx4j", version: "3.3.6") {
            exclude(group: 'org.apache.poi', module: 'poi')
            exclude(group: 'junit', module: 'junit')
            exclude(group: 'log4j', module: 'log4j')
            exclude(group: 'org.slf4j', module: 'slf4j-log4j12')
        }
        compile(group: "org.docx4j", name: "docx4j-ImportXHTML", version: "3.3.6") {
            exclude(group: 'junit', module: 'junit')
            exclude(group: 'org.apache.poi', module: 'poi')
            exclude(group: 'log4j', module: 'log4j')
            exclude(group: 'org.slf4j', module: 'slf4j-log4j12')
        }
        compile(group: "org.docx4j", name: "docx4j-export-fo", version: "3.3.6") {
            exclude(group: 'junit', module: 'junit')
            exclude(group: 'log4j', module: 'log4j')
            exclude(group: 'org.slf4j', module: 'slf4j-log4j12')
        }
        compile(group: "org.jsoup", name: "jsoup", version: "1.10.3")
        compile(group: "com.jayway.jsonpath", name: "json-path", version: "2.1.0")
        compile(group: "com.opencsv", name: "opencsv", version: "3.10")
        compile group: 'org.olap4j', name: 'olap4j', version: '1.2.0'
        compile(group: "net.sf.jasperreports", name: "jasperreports", version: "6.4.1") {
            exclude(group: 'org.apache.lucene')
            exclude(group: 'commons-beanutils', module: 'commons-beanutils')
            exclude(group: 'com.google.zxing', module: 'core')
            exclude(group: 'com.ibm.icu', module: 'icu4j')
            exclude(group: 'com.fasterxml.jackson.core')
            exclude(group: 'org.jfree')
            exclude(group: 'org.eclipse.jdt.core.compiler', module: 'ecj')
            exclude(group: 'com.lowagie', module: 'itext')
        }

        testCompile(group: 'junit', name: 'junit', version: '4.5')
        testCompile(group: 'org.hsqldb', name: 'hsqldb', version: '2.3.3')
        testCompile(group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4')
    }

    test {
        maxHeapSize = "512m"
        jvmArgs '-XX:MaxPermSize=256m'
        workingDir = new File('../..')
    }
}

configure(server) {
    apply(plugin: 'application')

    dependencies {
        compile(api)
        compile(core)
        compile(console)
        compile(group: 'com.sparkjava', name: 'spark-core', version: '2.6.0')
        testCompile(group: 'junit', name: 'junit', version: '4.5')
    }

    mainClassName = "com.haulmont.yarg.server.ServerRunner"

    configurations.archives.artifacts.removeAll {
        it.file =~ 'tar' || it.file =~ 'zip'
    }

    installDist {
        doLast {
            def outputDir = destinationDir
            copy {
                from "./../../reporting.properties"
                into "$outputDir/bin"
            }
        }
    }

    test {
        maxHeapSize = "512m"
        jvmArgs '-XX:MaxPermSize=256m'
        workingDir = new File('../..')
    }
}

configure(console) {
    apply(plugin: 'application')

    dependencies {
        compile(api)
        compile(core)
        compile(group: 'commons-cli', name: 'commons-cli', version: '1.2')
        compile(group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3')
        compile(group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4')
        testCompile(group: 'junit', name: 'junit', version: '4.5')
    }

    mainClassName = "com.haulmont.yarg.console.ConsoleRunner"

    configurations.archives.artifacts.removeAll {
        it.file =~ 'tar' || it.file =~ 'zip'
    }

    installDist {
        doLast {
            def outputDir = destinationDir
            copy {
                from "./../../reporting.properties"
                into "$outputDir/bin"
            }
        }
    }

    test {
        maxHeapSize = "512m"
        jvmArgs '-XX:MaxPermSize=256m'
        workingDir = new File('../..')
    }
}

subprojects {

    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'java'

    repositories {
        maven { url "https://nexus.financeactive.com/repository/maven-public/" }
        mavenLocal()
    }
    configurations {
        deployerJars
    }

    dependencies {
        compile(group: 'com.google.guava', name: 'guava', version: '17.0')
        deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
    }

//    RELEASE SUR NEXUS.FINANCEACTIVE.COM
    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
//            repository(url: 'dav:https://nexus.financeactive.com/repository/maven-thirdparty/') {
            repository(url: 'dav:https://nexus.financeactive.com/repository/maven-fa-releases/') {
                authentication(userName: 'service', password: 'BygsadHy')
            }
        }
    }
    createReleaseTag.dependsOn uploadArchives
}